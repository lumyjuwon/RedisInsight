name: Tests Downloads
on:
  push:


jobs:
  upload:
    name: Upload files
    runs-on: ubuntu-latest
    steps:
      - name: 'custom file'
        run: |
          mkdir -p release
          mkdir -p release/2
          echo "Artifact 1 content" > release/art1.txt
          echo "Artifact 2 content" > release/art2.txt
          echo "Artifact 3 content" > release/2/art.txt
          echo "Artifact 3 content" > release/diff_name_art3.txt

      # - name: 'store artifacts 1'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: 'artifact'
      #     path: |
      #       release/art*

      # - name: 'store artifacts 2'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: 'diff'
      #     path: |
      #       release/diff*

      - name: 'store artifacts 3'
        uses: actions/upload-artifact@v4
        with:
          name: 'art'
          path: |
            release/2/art*

  # zip-test:
  #   name: Download files
  #   needs: upload
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: artifact
  #         path: ./release

  #     - name: Display structure of downloaded files
  #       run: ls -R

  #     - name: Zip file
  #       run: |
  #         name="artifact"
  #         zip -r "./release/${name}.zip" "./release/${name}"
  #         ls -R

  download-test:
    name: Download files
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./release

      - name: Display structure of downloaded files
        run: ls -R

      - name: Generate files
        run: |
          base_dir="./release"

          declare -A dirs=(
            ["docker"]="docker-linux-alpine.amd64.tar docker-linux-alpine.arm64.tar"
            ["linux-appimage-build"]="Redis-Insight-linux-x86_64.AppImage"
            ["linux-deb-build"]="Redis-Insight-linux-amd64.deb"
            ["linux-rpm-build"]="Redis-Insight-linux-x86_64.rpm"
            ["linux-snap-builds"]="Redis-Insight-linux-amd64.snap latest-linux.yml"
            ["macos-arm-builds"]="Redis-Insight-mac-arm64.dmg Redis-Insight-mac-arm64.dmg.blockmap"
            ["macos-mas-builds"]="Redis-Insight-mac-universal-mas.pkg latest-mac.yml"
            ["macos-x64-builds"]="Redis-Insight-mac-x64.dmg Redis-Insight-mac-x64.dmg.blockmap"
            ["redistack-builds"]="Redis-Insight-app-darwin.arm64.tar.gz Redis-Insight-app-darwin.x64.tar.gz"
            ["web"]="Redis-Insight-web-darwin.arm64.tar.gz Redis-Insight-web-darwin.x64.tar.gz Redis-Insight-web-linux-musl.arm64.tar.gz Redis-Insight-web-linux-musl.x64.tar.gz Redis-Insight-web-linux.arm64.tar.gz Redis-Insight-web-linux.x64.tar.gz Redis-Insight-web-win32.x64.tar.gz"
            ["web-mini"]="Redis-Insight-web-darwin.arm64.tar.gz Redis-Insight-web-darwin.x64.tar.gz Redis-Insight-web-linux-musl.arm64.tar.gz Redis-Insight-web-linux-musl.x64.tar.gz Redis-Insight-web-linux.arm64.tar.gz Redis-Insight-web-linux.x64.tar.gz Redis-Insight-web-win32.x64.tar.gz"
            ["windows-builds"]="Redis-Insight-win-installer.exe Redis-Insight-win-installer.exe.blockmap builder-debug.yml latest.yml"
          )

          mkdir -p "$base_dir"

          for dir in "${!dirs[@]}"; do
            mkdir -p "$base_dir/$dir"
            for file in ${dirs[$dir]}; do
              echo "test" > "$base_dir/$dir/$file"
            done
          done

      - run: ls -R ./release

      - name: Zip file
        run: |
          root_dir="./release"


          # Define array of folders to exclude
          exclude=("web" "web-mini" "redistack-builds")

          # Iterate through first-level directories in ./release
          for dir in ./release/*/; do
            dir_name=$(basename "$dir")

            # Check if the directory is not in the exclude list
            if [[ ! " ${exclude[@]} " =~ " ${dir_name} " ]]; then
              # Move all files from the subdirectory to the release directory
              mv "$dir"* ./release/

              # Remove the now-empty subdirectory
              rmdir "$dir"
            fi
          done


          ls -R
